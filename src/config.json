{
  "title": "Generic Data Viewer",
  "logoLocation": "images/IDLab-logo.png",
  "logoRedirectURL": "https://idlab.technology/",
  "mainAppColor": "lightgray",
  "backgroundColor": "#fff",
  "titleColor": "black",
  "textColor": "#1976D2",
  "queryFolder": "queries",
  "httpProxy": "http://localhost:8000/",
  "showMilliseconds": false,
  "defaultIDP": "http://localhost:8080",
  "footer": "<p><a href='https://idlab.technology/'>IDLab</a> - <a href='https://www.imec.be/nl'>imec</a> - <a href='https://www.ugent.be/'>UGent</a></p>",
  "introductionText": "Please log in as the appropriate actor and make your choice in the menu on the left.",
  "queryGroups" : [
    {
      "id": "a-ex",
      "name": "General examples"
    },
    {
      "id": "b-prj",
      "name": "Project related examples",
      "icon": "FactoryIcon"
    },
    {
      "id": "c-tst",
      "name": "For testing only",
      "icon": "BugReportIcon"
    },
    {
      "id": "d-gqx",
      "name": "Generic query examples",
      "icon": "InfoIcon"
    }
  ],
  "queries": [
    {
      "id": "1000",
      "queryGroupId": "a-ex",
      "queryLocation": "idols.rq",
      "name": "My idols",
      "description": "Demonstrates a simple query, using a proxy",
      "comunicaContext": {
        "sources": ["http://localhost:8001/example/idols"],
        "useProxy": true
      }
    },
    {
      "id": "1010",
      "queryGroupId": "a-ex",
      "queryLocation": "images_test.rq",
      "name": "Some images",
      "description": "Demonstrates how to show images in a query result",
      "icon": "PhotoIcon",
      "comunicaContext": {
        "sources": ["http://localhost:8080/example/cute-cats"]
      }
    },
    {
      "id": "1020",
      "queryGroupId": "a-ex",
      "queryLocation": "ask_picasso.rq",
      "name": "Is there an artist influenced by Picasso?",
      "description": "Demonstrates an ASK query",
      "icon": "BrushIcon",
      "comunicaContext": {
        "sources": ["https://fragments.dbpedia.org/2016-04/en"]
      },
      "askQuery": {
        "trueText": "There is an artist who is inspired by Picasso!",
        "falseText": "There is no artist who is inspired by Picasso."
      }
    },
    {
      "id": "1030",
      "queryGroupId": "a-ex",
      "queryLocation": "construct_picasso.rq",
      "name": "A graph of artists influenced by Picasso",
      "description": "Demonstrates a CONSTRUCT query",
      "icon": "BrushIcon",
      "comunicaContext": {
        "sources": ["http://localhost:8080/example/artists"]
      }
    },
    {
      "id": "1040",
      "queryGroupId": "a-ex",
      "queryLocation": "average.rq",
      "name": "Average value",
      "description": "Demonstrates a query calculating some average",
      "icon": "FunctionsIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/values"
        ]
      }
    },
    {
      "id": "1045",
      "queryGroupId": "c-tst",
      "queryLocation": "average",
      "name": "Average value - queryLocation without rq",
      "description": "Should demonstrates a query calculating some average, but the queryLocation is faultive.",
      "icon": "FunctionsIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/values"
        ]
      }
    },
    {
      "id": "1046",
      "queryGroupId": "c-tst",
      "queryLocation": "averagefefefefe.rq",
      "name": "Average value - unexisting queryLocation (ends in .rq)",
      "description": "Should demonstrates a query calculating some average, but the queryLocation is faultive.",
      "icon": "FunctionsIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/values"
        ]
      }
    },
    {
      "id": "1050",
      "queryGroupId": "a-ex",
      "queryLocation": "books.rq",
      "name": "A secret list of my favorite books",
      "description": "Demonstrates a query whose source requires authentication",
      "icon": "MenuBookIcon",
      "comunicaContext": {
        "sources": ["http://localhost:8080/example/favourite-books"]
      }
    },
    {
      "id": "1060",
      "queryGroupId": "a-ex",
      "queryLocation": "books.rq",
      "name": "A public list of books I'd love to own",
      "description": "Demonstrates a query whose source does not require authentication",
      "icon": "MenuBookIcon",
      "comunicaContext": {
        "sources": ["http://localhost:8080/example/wish-list"]
      }
    },
    {
      "id": "1070",
      "queryGroupId": "a-ex",
      "queryLocation": "musicians.rq",
      "name": "A query about musicians",
      "description": "Demonstrates what happens if one of the sources is not available (fetch failure)",
      "icon": "MusicNoteIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-musicians",
          "http://www.example.com/fetch-failure-but-query-success"
        ],
        "lenient": true
      }
    },
    {
      "id": "1080",
      "queryGroupId": "a-ex",
      "queryLocation": "musicians_variables.rq",
      "name": "A templated query about musicians",
      "description": "Demonstrates the usage of templated queries",
      "icon": "MusicNoteIcon",
      "variables": {
        "genre": [
          "\"Romantic\"",
          "\"Baroque\"",
          "\"Classical\""
        ]
      },
      "comunicaContext": {
        "sources": ["http://localhost:8080/example/favourite-musicians"]
      }
    },
    {
      "id": "1090",
      "queryGroupId": "a-ex",
      "queryLocation": "components.rq",
      "name": "Source verification",
      "description": "Demonstrates source verification. Query components from three kinds of sources: a non-verifiable source, a successfully verifiable source, and a verifiable source with an incorrect proof.",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/verifiable-example/components-vc",
          "http://localhost:8080/verifiable-example/components-vc-incorrect-proof",
          "http://localhost:8080/example/components"
        ]
      }
    },
    {
      "id": "1100",
      "queryGroupId": "a-ex",
      "queryLocation": "components_materials.rq",
      "name": "Sources from an index file",
      "description": "Query components (including details about materials) with the sources obtained from index files",
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-texon-only",
        "queryLocation": "/sourceQueries/index_example_texon_only_source.rq"
      }
    },
    {
      "id": "1500",
      "queryGroupId": "c-tst",
      "queryLocation": "components_materials.rq",
      "name": "Sources from an index file (requiring authentication)",
      "description": "Query components (including details about materials) with the sources obtained from index files that require authentication to retrieve said sources.",
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-texon-only-AUTH",
        "queryLocation": "/sourceQueries/index_example_texon_only_source_AUTH.rq"
      }
    },

    {
      "id": "2000",
      "queryGroupId": "b-prj",
      "queryLocation": "components.rq",
      "name": "Components",
      "description": "Query components",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components"
        ]
      }
    },
    {
      "id": "2010",
      "queryGroupId": "b-prj",
      "queryLocation": "components_materials.rq",
      "name": "Components and their materials",
      "description": "Query components (including details about materials)",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    },
    {
      "id": "9000",
      "queryGroupId": "c-tst",
      "queryLocation": "books.rq",
      "name": "A query on a secret and a public list of books",
      "description": "Demonstrates a query on a source requiring authentication and a source not requiring authentication",
      "icon": "MenuBookIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-books",
          "http://localhost:8080/example/wish-list"
        ],
        "lenient": true
      }
    },
    {
      "id": "9010",
      "queryGroupId": "c-tst",
      "queryLocation": "musicians_variables2.rq",
      "name": "A templated query about musicians, two variables",
      "description": "Demonstrates the usage of templated queries, here with two variables",
      "icon": "MusicNoteIcon",
      "variables": {
        "genre": [
          "\"Romantic\"",
          "\"Baroque\"",
          "\"Classical\""
        ],
        "sameAsUrl": [
          "<https://en.wikipedia.org/wiki/Ludwig_van_Beethoven>",
          "<https://en.wikipedia.org/wiki/Wolfgang_Amadeus_Mozart>",
          "<https://en.wikipedia.org/wiki/Johann_Sebastian_Bach>",
          "<https://en.wikipedia.org/wiki/Franz_Schubert>"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-musicians"
        ]
      }
    },
    {
      "id": "9020",
      "queryGroupId": "c-tst",
      "queryLocation": "components_materials.rq",
      "name": "Components and their materials, with sources from index file also containing an unauthorized source",
      "description": "Query components (including details about materials) with the sources obtained from index files, including an unauthorized source of favourite books, to check lenient",
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-with-unauthorized-source",
        "queryLocation": "/sourceQueries/index_example_with_unauthorized_source.rq"
      }
    },
    {
      "id": "9030",
      "queryGroupId": "c-tst",
      "queryLocation": "components_materials.rq",
      "name": "Components and their materials, with mixed sources from comunicaContext and index file",
      "description": "Query components (including details about materials) with sources obtained from both comunicaContext.sources and index files",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-books",
          "http://localhost:8080/example/components"
        ],
        "lenient" : true
      },
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-texon-only",
        "queryLocation": "/sourceQueries/index_example_texon_only_source.rq"
      }
    },
    {
      "id": "9040",
      "queryGroupId": "c-tst",
      "queryLocation": "spo_distinct_offset_limit.rq",
      "name": "A test on DISTINCT LIMIT OFFSET",
      "description": "Query two sources containing duplicated triples. The query uses DISTINCT, LIMIT and OFFSET",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/dup1",
          "http://localhost:8080/example/dup2"
        ]
      }
    },
    {
      "id": "9050",
      "queryGroupId": "c-tst",
      "queryLocation": "so_distinct.rq",
      "name": "A test on counting the total number results",
      "description": "Query a source containing ?s ?p1 ?o and ?s ?p2 ?o with p1 != p2 and request only ?s ?o",
      "comunicaContext": {
        "sources": ["http://localhost:8080/example/dup1"]
      }
    },
    {
      "id": "10000",
      "queryGroupId": "d-gqx",
      "queryLocation": "example_count_spo.rq",
      "name": "Count",
      "description": "Gives the count of triples in the indicated datasources",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    },
    {
      "id": "10001",
      "queryGroupId": "d-gqx",
      "queryLocation": "example_spo.rq",
      "name": "Triples",
      "description": "Gives at most 50 triples in the indicated datasources",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    },
    {
      "id": "10002",
      "queryGroupId": "d-gqx",
      "queryLocation": "example_s.rq",
      "name": "Subjects",
      "description": "Gives at most 50 subjects in the indicated datasources",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    },
    {
      "id": "10003",
      "queryGroupId": "d-gqx",
      "queryLocation": "example_p.rq",
      "name": "Predicates",
      "description": "Gives at most 50 predicates in the indicated datasources",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    },
    {
      "id": "10004",
      "queryGroupId": "d-gqx",
      "queryLocation": "example_o.rq",
      "name": "Objects",
      "description": "Gives at most 50 objects in the indicated datasources",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    },
    {
      "id": "10005",
      "queryGroupId": "d-gqx",
      "queryLocation": "example_sxpo.rq",
      "name": "Triples with subject",
      "description": "Gives at most 50 triples with a given subject in the indicated datasources",
      "variables": {
        "subject": [
          "<https://www.example.com/data/component-bom-b01>",
          "<https://www.example.com/data/component-c01>",
          "<https://www.example.com/data/component-material-assoc-b01-m01>",
          "<https://www.example.com/data/material-m01>"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    },
    {
      "id": "10006",
      "queryGroupId": "d-gqx",
      "queryLocation": "example_spxo.rq",
      "name": "Triples with predicate",
      "description": "Gives at most 50 triples with a given predicate in the indicated datasources",
      "variables": {
        "predicate": [
          "<https://www.example.com/ont/has-component-bom>",
          "<https://www.example.com/ont/has-component-material-assoc>",
          "<https://www.example.com/ont/has-material>",
          "<https://www.example.com/ont/name>",
          "<https://www.example.com/ont/percentage>",
          "<https://www.example.com/ont/recycled-content-percentage>"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    },
    {
      "id": "10007",
      "queryGroupId": "d-gqx",
      "queryLocation": "example_spox.rq",
      "name": "Triples with object",
      "description": "Gives at most 50 triples with a given object in the indicated datasources",
      "variables": {
        "object": [
          "<https://www.example.com/data/component-bom-b01>",
          "<https://www.example.com/data/component-material-assoc-b01-m01>",
          "<https://www.example.com/data/material-m01>",
          "<https://www.example.com/ont/Component>",
          "<https://www.example.com/ont/component-bom>",
          "<https://www.example.com/ont/component-material-assoc>",
          "0",
          "20",
          "80",
          "\"Component 1\"",
          "\"Material 1\""
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    },
    {
      "id": "10008",
      "queryGroupId": "d-gqx",
      "queryLocation": "example_type.rq",
      "name": "Terms of type",
      "description": "Gives at most 50 terms of a given rdf:type in the indicated datasources",
      "variables": {
        "type": [
          "<https://www.example.com/ont/component-bom>",
          "<https://www.example.com/ont/Component>",
          "<https://www.example.com/ont/component-material-assoc>"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    }
  ]
}
